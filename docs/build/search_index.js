var documenterSearchIndex = {"docs":
[{"location":"surrogates/#","page":"Surrogates","title":"Surrogates","text":"(Image: SurrogatesLogo)","category":"page"},{"location":"surrogates/#Overview-1","page":"Surrogates","title":"Overview","text":"","category":"section"},{"location":"surrogates/#","page":"Surrogates","title":"Surrogates","text":"A surrogate model is an approximation method that mimics the behavior of a computationally expensive simulation. In more mathematical terms: suppose we are attempting to optimize a function  f(p), but each calculation of  f is very expensive. It may be the case we need to solve a PDE for each point or use advanced numerical linear algebra machinery which is usually costly. The idea is then to develop a surrogate model  g which approximates  f by training on previous data collected from evaluations of  f. The construction of a surrogate model can be seen as a three steps process:","category":"page"},{"location":"surrogates/#","page":"Surrogates","title":"Surrogates","text":"Sample selection\nConstruction of the surrogate model\nSurrogate optimization","category":"page"},{"location":"surrogates/#","page":"Surrogates","title":"Surrogates","text":"The sampling methods are super important for the behaviour of the Surrogate. At the moment they are:","category":"page"},{"location":"surrogates/#","page":"Surrogates","title":"Surrogates","text":"Grid sample\nUniform sample\nSobol sample\nLatin Hypercupe sample\nLow discrepancy sample","category":"page"},{"location":"surrogates/#","page":"Surrogates","title":"Surrogates","text":"The available surrogates are:","category":"page"},{"location":"surrogates/#","page":"Surrogates","title":"Surrogates","text":"Linear\nRadial Basis\nKriging\nNeural Network\nSupport vector machine\nRandom Forest","category":"page"},{"location":"surrogates/#","page":"Surrogates","title":"Surrogates","text":"After the Surrogate is built, we need to optimize it with respect to some objective function. That is, simultaneously looking for a minimum and sampling the most unknown region.   The available optimization methods are:","category":"page"},{"location":"surrogates/#","page":"Surrogates","title":"Surrogates","text":"Stochastic RBF (SRBF)\nLower confidence bound strategy (LCBS)\nExpected improvement (EI)\nDynamic coordinate search (DYCORS)","category":"page"},{"location":"surrogates/#Installation-1","page":"Surrogates","title":"Installation","text":"","category":"section"},{"location":"surrogates/#","page":"Surrogates","title":"Surrogates","text":"At the moment you need to fork the repository on GitHub: https://github.com/JuliaDiffEq/Surrogates.jl In the very near future I plan on registering it.","category":"page"},{"location":"surrogates/#Quick-example-1","page":"Surrogates","title":"Quick example","text":"","category":"section"},{"location":"surrogates/#","page":"Surrogates","title":"Surrogates","text":"using Surrogates\nnum_samples = 10\nlb = 0.0\nub = 10.0\n\n#Sampling\nx = Sample(num_samples,lb,ub,SobolSample())\nf = x-> log(x)*x^2+x^3\ny = f.(x)\n\n#Creating surrogate\nmy_lobachesky = LobacheskySurrogate(x,y,lb,ub)\n\n#Approximanting value at 5.0\nvalue = my_lobachesky(5.0)\n\n#Adding more data points\nsurrogate_optimize(f,SRBF(),lb,ub,my_lobachesky,UniformSample())\n\n#New approximation\nvalue = my_lobachesky(5.0)","category":"page"},{"location":"samples/#","page":"Samples","title":"Samples","text":"(Image: SurrogatesLogo)","category":"page"},{"location":"samples/#Overview-1","page":"Samples","title":"Overview","text":"","category":"section"},{"location":"samples/#","page":"Samples","title":"Samples","text":"A surrogate model is an approximation method that mimics the behavior of a computationally expensive simulation. In more mathematical terms: suppose we are attempting to optimize a function  f(p), but each calculation of  f is very expensive. It may be the case we need to solve a PDE for each point or use advanced numerical linear algebra machinery which is usually costly. The idea is then to develop a surrogate model  g which approximates  f by training on previous data collected from evaluations of  f. The construction of a surrogate model can be seen as a three steps process:","category":"page"},{"location":"samples/#","page":"Samples","title":"Samples","text":"Sample selection\nConstruction of the surrogate model\nSurrogate optimization","category":"page"},{"location":"samples/#","page":"Samples","title":"Samples","text":"The sampling methods are super important for the behaviour of the Surrogate. At the moment they are:","category":"page"},{"location":"samples/#","page":"Samples","title":"Samples","text":"Grid sample\nUniform sample\nSobol sample\nLatin Hypercupe sample\nLow discrepancy sample","category":"page"},{"location":"samples/#","page":"Samples","title":"Samples","text":"The available surrogates are:","category":"page"},{"location":"samples/#","page":"Samples","title":"Samples","text":"Linear\nRadial Basis\nKriging\nNeural Network\nSupport vector machine\nRandom Forest","category":"page"},{"location":"samples/#","page":"Samples","title":"Samples","text":"After the Surrogate is built, we need to optimize it with respect to some objective function. That is, simultaneously looking for a minimum and sampling the most unknown region.   The available optimization methods are:","category":"page"},{"location":"samples/#","page":"Samples","title":"Samples","text":"Stochastic RBF (SRBF)\nLower confidence bound strategy (LCBS)\nExpected improvement (EI)\nDynamic coordinate search (DYCORS)","category":"page"},{"location":"samples/#Installation-1","page":"Samples","title":"Installation","text":"","category":"section"},{"location":"samples/#","page":"Samples","title":"Samples","text":"At the moment you need to fork the repository on GitHub: https://github.com/JuliaDiffEq/Surrogates.jl In the very near future I plan on registering it.","category":"page"},{"location":"samples/#Quick-example-1","page":"Samples","title":"Quick example","text":"","category":"section"},{"location":"samples/#","page":"Samples","title":"Samples","text":"using Surrogates\nnum_samples = 10\nlb = 0.0\nub = 10.0\n\n#Sampling\nx = Sample(num_samples,lb,ub,SobolSample())\nf = x-> log(x)*x^2+x^3\ny = f.(x)\n\n#Creating surrogate\nmy_lobachesky = LobacheskySurrogate(x,y,lb,ub)\n\n#Approximanting value at 5.0\nvalue = my_lobachesky(5.0)\n\n#Adding more data points\nsurrogate_optimize(f,SRBF(),lb,ub,my_lobachesky,UniformSample())\n\n#New approximation\nvalue = my_lobachesky(5.0)","category":"page"},{"location":"#","page":"Overview","title":"Overview","text":"(Image: SurrogatesLogo)","category":"page"},{"location":"#Overview-1","page":"Overview","title":"Overview","text":"","category":"section"},{"location":"#","page":"Overview","title":"Overview","text":"A surrogate model is an approximation method that mimics the behavior of a computationally expensive simulation. In more mathematical terms: suppose we are attempting to optimize a function  f(p), but each calculation of  f is very expensive. It may be the case we need to solve a PDE for each point or use advanced numerical linear algebra machinery which is usually costly. The idea is then to develop a surrogate model  g which approximates  f by training on previous data collected from evaluations of  f. The construction of a surrogate model can be seen as a three steps process:","category":"page"},{"location":"#","page":"Overview","title":"Overview","text":"Sample selection\nConstruction of the surrogate model\nSurrogate optimization","category":"page"},{"location":"#","page":"Overview","title":"Overview","text":"The sampling methods are super important for the behaviour of the Surrogate. At the moment they are:","category":"page"},{"location":"#","page":"Overview","title":"Overview","text":"Grid sample\nUniform sample\nSobol sample\nLatin Hypercupe sample\nLow discrepancy sample","category":"page"},{"location":"#","page":"Overview","title":"Overview","text":"The available surrogates are:","category":"page"},{"location":"#","page":"Overview","title":"Overview","text":"Linear\nRadial Basis\nKriging\nNeural Network\nSupport vector machine\nRandom Forest","category":"page"},{"location":"#","page":"Overview","title":"Overview","text":"After the Surrogate is built, we need to optimize it with respect to some objective function. That is, simultaneously looking for a minimum and sampling the most unknown region.   The available optimization methods are:","category":"page"},{"location":"#","page":"Overview","title":"Overview","text":"Stochastic RBF (SRBF)\nLower confidence bound strategy (LCBS)\nExpected improvement (EI)\nDynamic coordinate search (DYCORS)","category":"page"},{"location":"#Installation-1","page":"Overview","title":"Installation","text":"","category":"section"},{"location":"#","page":"Overview","title":"Overview","text":"At the moment you need to fork the repository on GitHub: https://github.com/JuliaDiffEq/Surrogates.jl In the very near future I plan on registering it.","category":"page"},{"location":"#Quick-example-1","page":"Overview","title":"Quick example","text":"","category":"section"},{"location":"#","page":"Overview","title":"Overview","text":"using Surrogates\nnum_samples = 10\nlb = 0.0\nub = 10.0\n\n#Sampling\nx = Sample(num_samples,lb,ub,SobolSample())\nf = x-> log(x)*x^2+x^3\ny = f.(x)\n\n#Creating surrogate\nmy_lobachesky = LobacheskySurrogate(x,y,lb,ub)\n\n#Approximanting value at 5.0\nvalue = my_lobachesky(5.0)\n\n#Adding more data points\nsurrogate_optimize(f,SRBF(),lb,ub,my_lobachesky,UniformSample())\n\n#New approximation\nvalue = my_lobachesky(5.0)","category":"page"},{"location":"optimizations/#","page":"Optimization","title":"Optimization","text":"(Image: SurrogatesLogo)","category":"page"},{"location":"optimizations/#Overview-1","page":"Optimization","title":"Overview","text":"","category":"section"},{"location":"optimizations/#","page":"Optimization","title":"Optimization","text":"A surrogate model is an approximation method that mimics the behavior of a computationally expensive simulation. In more mathematical terms: suppose we are attempting to optimize a function  f(p), but each calculation of  f is very expensive. It may be the case we need to solve a PDE for each point or use advanced numerical linear algebra machinery which is usually costly. The idea is then to develop a surrogate model  g which approximates  f by training on previous data collected from evaluations of  f. The construction of a surrogate model can be seen as a three steps process:","category":"page"},{"location":"optimizations/#","page":"Optimization","title":"Optimization","text":"Sample selection\nConstruction of the surrogate model\nSurrogate optimization","category":"page"},{"location":"optimizations/#","page":"Optimization","title":"Optimization","text":"The sampling methods are super important for the behaviour of the Surrogate. At the moment they are:","category":"page"},{"location":"optimizations/#","page":"Optimization","title":"Optimization","text":"Grid sample\nUniform sample\nSobol sample\nLatin Hypercupe sample\nLow discrepancy sample","category":"page"},{"location":"optimizations/#","page":"Optimization","title":"Optimization","text":"The available surrogates are:","category":"page"},{"location":"optimizations/#","page":"Optimization","title":"Optimization","text":"Linear\nRadial Basis\nKriging\nNeural Network\nSupport vector machine\nRandom Forest","category":"page"},{"location":"optimizations/#","page":"Optimization","title":"Optimization","text":"After the Surrogate is built, we need to optimize it with respect to some objective function. That is, simultaneously looking for a minimum and sampling the most unknown region.   The available optimization methods are:","category":"page"},{"location":"optimizations/#","page":"Optimization","title":"Optimization","text":"Stochastic RBF (SRBF)\nLower confidence bound strategy (LCBS)\nExpected improvement (EI)\nDynamic coordinate search (DYCORS)","category":"page"},{"location":"optimizations/#Installation-1","page":"Optimization","title":"Installation","text":"","category":"section"},{"location":"optimizations/#","page":"Optimization","title":"Optimization","text":"At the moment you need to fork the repository on GitHub: https://github.com/JuliaDiffEq/Surrogates.jl In the very near future I plan on registering it.","category":"page"},{"location":"optimizations/#Quick-example-1","page":"Optimization","title":"Quick example","text":"","category":"section"},{"location":"optimizations/#","page":"Optimization","title":"Optimization","text":"using Surrogates\nnum_samples = 10\nlb = 0.0\nub = 10.0\n\n#Sampling\nx = Sample(num_samples,lb,ub,SobolSample())\nf = x-> log(x)*x^2+x^3\ny = f.(x)\n\n#Creating surrogate\nmy_lobachesky = LobacheskySurrogate(x,y,lb,ub)\n\n#Approximanting value at 5.0\nvalue = my_lobachesky(5.0)\n\n#Adding more data points\nsurrogate_optimize(f,SRBF(),lb,ub,my_lobachesky,UniformSample())\n\n#New approximation\nvalue = my_lobachesky(5.0)","category":"page"}]
}
